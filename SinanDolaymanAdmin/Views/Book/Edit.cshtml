@model Entities.Book
<div class="dashboard-wrapper">
    <div class="container-fluid  dashboard-content">
        <!-- ============================================================== -->
        <!-- pageheader -->
        <!-- ============================================================== -->
        <div class="row">
            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                <div class="page-header" id="top">
                    <h2 class="pageheader-title">Kitap Düzenle </h2>
                    <div class="page-breadcrumb">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")" class="breadcrumb-link">Anasayfa</a></li>
                                <li class="breadcrumb-item"><a href="@Url.Action("Index","Book")" class="breadcrumb-link">Kitaplar</a></li>
                                <li class="breadcrumb-item active" aria-current="page">Kitap Düzenle</li>
                            </ol>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
        <!-- ============================================================== -->
        <!-- end pageheader -->
        <!-- ============================================================== -->

        <div class="row">
            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                <div class="section-block" id="basicform">
                    <h3 class="section-title">Kitaplar</h3>
                </div>
                <div class="card">
                    <h5 class="card-header">Kitap Düzenle</h5>
                    <div class="card-body">
                        @using (Html.BeginForm("Edit", "Book", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label" })
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.CoverImage, "Resim urlini buraya yapıştırınız", htmlAttributes: new { @class = "col-form-label" })
                                @Html.EditorFor(model => model.CoverImage, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CoverImage, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                Veya
                                <label for="bookImage"> Bir detay resim yükleyin</label>
                                <input name="image" type="file" class="form-control-file" id="bookImage">
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.DetailImage, "Resim urlini buraya yapıştırınız", htmlAttributes: new { @class = "col-form-label" })
                                @Html.EditorFor(model => model.DetailImage, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DetailImage, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                Veya
                                <label for="detailImage"> Bir resim yükleyin</label>
                                <input name="detailImage" type="file" class="form-control-file" id="detailImage">
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "col-form-label" })
                                @Html.TextAreaFor(model => model.Summary, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Path, htmlAttributes: new { @class = "col-form-label" })
                                @Html.EditorFor(model => model.Path, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Path, "", new { @class = "text-danger" })
                            </div>
                            
                            <div class="form-group">
                                <label for="bookPdf"> Kitap PDF'ini yükleyin</label>
                                <input name="bookPdf" type="file" class="form-control-file" id="bookPdf">
                                <span class="text-danger">@ViewBag.FileError </span>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Content)
                                @Html.TextAreaFor(model => model.Content, new { @class = "ckeditor" })
                                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "col-form-label" })
                                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                            </div>
                            <input type="submit" value="Düzenle" class="btn btn-facebook" />
                        }
                        <div>
                            <br>
                            @Html.ActionLink("Listeye Dön", "Index")
                        </div>
                    </div>

                </div>



            </div>
        </div>
    </div>

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
